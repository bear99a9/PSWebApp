{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/store.service.ts","./src/app/views/productListView.component.html","./src/app/views/productListView.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;;;;;;;ACLO,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,MAAM,CAAC;KAChB;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,yEAAiB;QACb,yEAAmB;QACf,qEAAI;QAAA,uDAAW;QAAA,4DAAK;QACpB,0EAA6B;QACjC,4DAAM;QACN,yEAAmB;QACf,qEAAI;QAAA,+DAAI;QAAA,4DAAK;QACjB,4DAAM;QAEV,4DAAM;;QAPM,0DAAW;QAAX,0EAAW;;;;;;;;;;;;;;;;;;;;;;;ACDmC;AACF;AAET;AACE;AACe;;AAgBzD,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GAHX;QACX,0DAAK;KACJ,YANM;YACL,oEAAa;YACb,kEAAgB;SACnB;mIAMU,SAAS,mBAZhB,wDAAY;QACZ,qEAAe,aAGf,oEAAa;QACb,kEAAgB;;;;;;;;;;;;;;;;;;;ACZe;;;AAI9B,MAAM,KAAK;IAEd,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAI7B,aAAQ,GAGT,EAAE,CAAC;IALT,CAAC;IAOD,YAAY;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAK,eAAe,CAAC;aACpC,IAAI,CAAC,mDAAG,CAAC,IAAI,CAAC,EAAE;YACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO;QACX,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;;0DAjBQ,KAAK;sGAAL,KAAK,WAAL,KAAK;;;;;;;;;;;;;;;;;;;;;;;ICLV,qEAAqC;IAAA,uDAA6B;IAAA,4DAAK;;;IAAlC,0DAA6B;IAA7B,uGAA6B;;ACM3D,MAAM,eAAe;IAGhC,YAAmB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;IAC/B,CAAC;IAGD,QAAQ;QACJ,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;aACpB,SAAS,EAAE,CAAC,CAAC,6BAA6B;IACnD,CAAC;;8EAVgB,eAAe;6GAAf,eAAe;QDRpC,yEAAiB;QACb,qEAAI;QACA,yGAAuE;QAC3E,4DAAK;QACT,4DAAM;;QAFoB,0DAAiB;QAAjB,uFAAiB;;;;;;;;;;;;;;;;;AEF3C,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IACxB,6DAAc,EAAE,CAAC;CACpB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: 'app.component.html',\n  styles: []\n})\nexport class AppComponent {\n  title = 'Shop';\n}\n","<div class=\"row\">\r\n    <div class=\"col-9\">\r\n        <h3>{{ title }}</h3>\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <h3>Cart</h3>\r\n    </div>\r\n\r\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { Store } from './services/store.service';\r\nimport ProductListView from './views/productListView.component';\r\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      ProductListView\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule\n  ],\n    providers: [\n    Store\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Data } from \"@angular/router\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\n\r\nexport class Store {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public products: {\r\n        id: number; category: string; size: string; artDescription: string; artDating: string; artId: string;\r\n        artisit: string; artistNationality: string; title: string; price: string; artistBirthDate: Date; artistDeathDate: Date;\r\n    }[] = [];\r\n\r\n    loadProducts() {\r\n        return this.http.get<[]>('/api/products')\r\n            .pipe(map(data => {\r\n                this.products = data;\r\n                return;\r\n            }));\r\n    }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <ul>\r\n        <li *ngFor=\"let p of store.products\">{{ p.title }}: ${{ p.price }}</li>\r\n    </ul>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl:\"productListView.component.html\"\r\n})\r\n\r\nexport default class ProductListView implements OnInit {\r\n\r\n\r\n    constructor(public store: Store) {\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.store.loadProducts()\r\n            .subscribe(); // <- kicks off the operation\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}